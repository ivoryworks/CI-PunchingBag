apply plugin: 'com.android.application'
apply plugin: 'findbugs'

check.dependsOn 'findbugs'

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.ivoryworks.cipunchingbag"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"

    def conf
    if (project.hasProperty('findBugsExcludeFilter')) {
        conf = file(findBugsExcludeFilter)
    }
    excludeFilter = conf
    classes = files("$project.buildDir/intermediates/classes/")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml {
            destination new File("$project.buildDir/reports/findbugs/findbugs.xml")
            xml.withMessages true
        }
    }

    classpath = files()
}
